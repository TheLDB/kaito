import {readFileSync, writeFileSync} from 'fs';
import {dirname, join, resolve} from 'path';
import {fileURLToPath} from 'url';

if (process.argv.length !== 3) {
	console.error('Usage: node build-wasm-from-file.ts <source-wasm-folder-path>');
	process.exit(1);
}

const sourcePath = process.argv[2];

if (!sourcePath) {
	console.error('Usage: node --experimental-strip-types build-wasm-from-file.ts <source-wasm-folder-path>');
	process.exit(1);
}

const scriptDir = dirname(fileURLToPath(import.meta.url));
const buildDir = resolve(scriptDir, '../src/llhttp/build/wasm');

console.log('Converting WASM to base64...');
const wasmPath = join(sourcePath, 'llhttp.wasm');
const base64Wasm = readFileSync(wasmPath).toString('base64');

const def = `// Generated by packages/llhttp-wasm/scripts/build-wasm-from-file.ts\n\nexport const wasmBase64 = "${base64Wasm}";`;
writeFileSync(join(buildDir, '../../base64.ts'), def);

console.log('Cleaning up source artifacts...');
console.log('Build completed successfully!');
console.log(`Base64 file: ${join(scriptDir, '../base64.ts')}`);
console.log(`Target directory: ${buildDir}`);
